<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*x = boss.x
y = boss.y
if boss.state == "runningLeft"
{
    if distance_to_object(driver) &lt; 50
    {
        boss.randomAttackTimer -= 1
        if boss.randomAttackTimer &lt;=0
        {
            boss.attackRandom = abs(randomize()%100)
            if boss.attackRandom &lt; 61
            {
                boss.state = "punchingLeft"
                boss.randomAttackTimer = 30
            }
            else 
                boss.randomAttackTimer = 30
        }
    }/*
    if (!place_free(x+10, y)) 
    { // i'm about to collide right
        hspeed = 0
        state = "runningRight"
    }*/
/*}
if boss.state == "runningRight"
{
    if distance_to_object(driver) &lt; 50
    {
        boss.randomAttackTimer -= 1
        if boss.randomAttackTimer &lt;=0
        {
            boss.attackRandom = abs(randomize()%100)
            if boss.attackRandom &lt; 61
            {
                boss.state = "punchingRight"
                boss.randomAttackTimer = 30
            }
            else 
                boss.randomAttackTimer = 30
        }
    }/*
    if (!place_free(x+10, y)) 
    { // i'm about to collide right
        //hspeed = 0
        state = "runningLeft"
    }*/
/*}
/*if state == "jumpingLeft"
{
    sprite_index = bossJumpingLeft
    vspeed = jumpStrength
    if (!place_free(x, y+5))
    {
        state = "runningLeft"
    }
}

if state == "jumpingRight"
{
    sprite_index = bossJumpingRight
    vspeed = jumpStrength
    if (!place_free(x, y+5))
    {
        state = "runningRight"
    }
}*/
/*if boss.state == "punchingRight"
{
    if boss.punchingTimer &lt;=0
    {
        boss.punchingTimer = 10
        boss.state = "runningRight"
    }
}
if boss.state == "punchingLeft"
{
    if boss.punchingTimer &lt;=0
    {
        boss.punchingTimer = 10
        boss.state = "runningLeft"
    }
}


if boss.state == "stunnedRight"
{
    boss.stunTimer -=1
    if boss.stunTimer &lt;=0
        boss.state = "runningLeft"
}
if boss.state == "stunnedLeft"
{
    boss.stunTimer -= 1
    if boss.stunTimer &lt;= 0
        boss.state = "runningRight"
}
if boss.randomJumpTimer &lt;= 0
{  
    if boss.state == "runningRight"
    or boss.state == "runningLeft"
    {
        boss.randomNumber = abs(randomize() %100)
        if boss.randomNumber &lt; 41
        {
            if boss.state == "runningLeft"
                boss.state = "jumpingLeft"
            if boss.state == "runningRight"
                boss.state = "jumpingRight"
            boss.randomJumpTimer = 90
        }
        else if boss.randomNumber &gt; 40
        and boss.randomNumber &lt; 81
        {
            boss.randomJumpTimer = 90
        }
        else
        {
            boss.state = "shockWaveJump"
            boss.randomJumpTimer = 90
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
